6 Random Trace Generation
A major part of gameplay is the trace presented to the player. Gameplay would be improved by randomly generating traces on startup. This would offer longevity and interest. We wrote code in Verilog to take input from a circuit via a GPIO pin, sample this input at roughly 5Hz, and translate this input to a trace on the screen. We attempted three major circuit designs in an effort to simulate randomness.
6.1 Circuit 1: Zener Diodes
Our first attempt at building a random bit generator was to create a noisy circuit. The first idea we had was to use to op amps in order to amplify the the reverse bias noise of a Zener diode. A Zener diode is a Semicon- ductor Diode that blocks current in the reverse direction, unlike other diodes that stop conducting current in the reverse direction, it suffers from prema- ture breakdown or damage if the reverse voltage applied across becomes too high. The point at which the zener voltage triggers the current to flow through the diode can be very controlled very exactly, which would have allowed us to hold it at a very narrow random just around the threshold tolerance of the GPIO pins. This zener breakdown voltage on the I-V curve is almost a verti- cal straight line. Our circuit design was based on the circuit on this website (http://www.physics.wisc.edu/ lmaurer/projects/minirng/minirng.html). The circuit diagram is reproduced for convenience here.
Figure 20: Amplifying Zener breakdown for random bit generation
6.2 Circuit 2: Phototransistor and Voltage Division
After working extensively with phototransistors in implementing our IR con- trollers, we decided to try using one in an ambient light circuit to create random
14
 
voltages. This circuit would ideally hover around the digital high/low threshold and flip between the two at small changes in ambient light. Although the circuit properly sensed light, and the Verilog code correctly generated traces based on this input, a flashlight had to be pointed straight at the phototransistor in order to make the voltage switch from high to low.
6.3 Circuit 3: Phototransistor and Power Supply
After testing countless variations of resistors in our voltage divider random cir- cuit, we decided to hook up the phototransistor directly to a power supply and send its output to a GPIO pin. Oddly, the pin indicated that a low voltage was only read at voltage inputs of around 1V, despite the documented voltage threshold of at least 2.5V. This misleading voltage threshold meant hours of testing for little reward. When we finally discovered the correct voltage thresh- old, we were able to generate random traces based on the flickering of ambient light levels. A sample of one of these random traces can be found below. This implementation was not included in the final design due to the unreliable nature of the GPIO pin and phototransistor.
